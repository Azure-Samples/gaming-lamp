{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "loginUserName": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "The admin username to connect to the Virtual Machine after being deployed."
      }
    },
    "VMName": {
      "type": "string",
      "defaultValue": "myVirtualMachine",
      "metadata": {
        "description": "The name of the Virtual Machine to be used for creating a golden image."
      }
    },
    "VMSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Virtual Machine size option. Be aware that Premium SSD is not supported in every Virtual Machine option."
      }
    },
    "VMDataDiskSize": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "How much persistent disk storage you are going to allocate per Virtual Machine."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04-LTS",
      "allowedValues": [
        "12.04-LTS",
        "14.04-LTS",
        "16.04-LTS",
        "18.04-LTS"
      ],
      "metadata": {
        "description": "The Linux OS that will be installed in the Virtual Machine."
      }
    },
    "authenticationMethod": {
      "type": "string",
      "defaultValue": "SSH Key",
      "allowedValues": [
          "SSH Key",
          "Password"
      ],
      "metadata": {
        "description": "This option could be either SSH key or Password."
      }
    },
    "authenticationKey": {
      "type": "securestring",
      "metadata": {
        "description": "Type SSH key or Password."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "nicName": "[concat(parameters('VMName'),'NIC')]",
    "publicIPAddressName": "[concat(parameters('VMName'),'PublicIP')]",
    "virtualNetworkName": "[concat(parameters('VMName'),'VNET')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('loginUserName'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('authenticationKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "pid-877696cf-d5a0-001f-9954-ab370b719474",
      "comments": "GUID for tracking production pilot deployments intended for Gaming-LAMP-01-Create-VM.",
      "type": "Microsoft.Resources/deployments",
      "properties": {
          "mode": "Incremental",
          "template": {
            "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
          }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-03-01",
      "name": "[parameters('VMName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('VMName')]",
          "adminUsername": "[parameters('loginUserName')]",
          "adminPassword": "[if(equals(parameters('authenticationMethod'),'Password'), parameters('authenticationKey'),json('null'))]",
          "linuxConfiguration": "[if(equals(parameters('authenticationMethod'), 'Password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "[parameters('ubuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "createOption": "FromImage"
            },
            "dataDisks": [
              {
                "diskSizeGB": "[parameters('VMDataDiskSize')]",
                "lun": 0,
                "createOption": "Empty"
              }
            ]
          },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-04-01",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-04-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-04-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
  }
}